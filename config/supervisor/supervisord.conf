# Main supervisor configuration
[supervisord]
nodaemon=true                           # Run in the foreground (non-daemon mode)
logfile=/var/log/supervisor/supervisord.log  # Path to the main log file
pidfile=/var/run/supervisord.pid        # Path to the PID file
user=root                               # Run as root user

# Supervisor control interface configuration
[supervisorctl]
serverurl=unix:///var/run/supervisor.sock  # Socket URL for supervisor control

# RPC interface configuration
[rpcinterface:supervisor]
# Factory for RPC interface
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

# Unix socket server configuration
[unix_http_server]
file=/var/run/supervisor.sock           # Socket file location
chmod=0700                              # Socket file permissions

# Caddy web server process configuration
[program:caddy]
# Command to start Caddy
command=/usr/bin/caddy run --config /etc/caddy/Caddyfile --adapter caddyfile
autostart=true                          # Start automatically when supervisor starts
autorestart=true                        # Restart automatically if it exits
stdout_logfile=/dev/stdout              # Send stdout to Docker log collector
stdout_logfile_maxbytes=0               # No limit on stdout log size
stderr_logfile=/dev/stderr              # Send stderr to Docker log collector
stderr_logfile_maxbytes=0               # No limit on stderr log size

# SSH server process configuration
[program:sshd]
command=/usr/sbin/sshd -D               # Command to start SSH daemon in foreground
autostart=true                          # Start automatically when supervisor starts
autorestart=true                        # Restart automatically if it exits
stdout_logfile=/dev/stdout              # Send stdout to Docker log collector
stdout_logfile_maxbytes=0               # No limit on stdout log size
stderr_logfile=/dev/stderr              # Send stderr to Docker log collector
stderr_logfile_maxbytes=0               # No limit on stderr log size

# Gunicorn services configuration
[program:gunicorn_services]
command=/scripts/start_services.sh supervisor   # Added "supervisor" parameter
user=admin                              # Execute as admin user
autostart=true                          # Start automatically when supervisor starts
autorestart=true                        # Restart automatically if it exits
stdout_logfile=/dev/stdout              # Send stdout to Docker log collector
stdout_logfile_maxbytes=0               # No limit on stdout log size
stderr_logfile=/dev/stderr              # Send stderr to Docker log collector
stderr_logfile_maxbytes=0               # No limit on stderr log size
startsecs=10                            # Consider it successfully started after 10 seconds
startretries=3                          # Number of retries if it fails to start
stopasgroup=true                        # Stop all child processes when stopping this program
killasgroup=true                        # Kill all child processes when killing this program

[program:celery_workers]
command=/scripts/start_celery_workers.sh
user=admin                              # Execute as admin user
autostart=true                          # Start automatically when supervisor starts
autorestart=false                       # NO restart - script launches workers and exits
stdout_logfile=/dev/stdout              # Send stdout to Docker log collector
stdout_logfile_maxbytes=0               # No limit on stdout log size
stderr_logfile=/dev/stderr              # Send stderr to Docker log collector
stderr_logfile_maxbytes=0               # No limit on stderr log size
exitcodes=0                             # Exit code 0 is expected (success)
startsecs=0                             # Don't wait to consider it successful
startretries=1                          # Only try once
stopasgroup=true                        # Stop all child processes when stopping this program
killasgroup=true                        # Kill all child processes when killing this program

[program:cron]
command=/usr/sbin/cron -f
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
